server {
    # "listen" on port 80, and we can change this if we want to listen on a different port of the container.
    listen 80;
    
    # "index" defines files that will be used as an index.
    index index.php index.html;
    
    # "server_name" determines which server block is used for a given request.
    # Server block defines a virtual server used to handle requests of a defined type.
    server_name localhost;
    
    # It ensures that in this directory we look for files which we can use to respond to the incoming request.
    root /var/www/html/public;
    
    # It ensure that all incoming requests are redirected to the "index.php" files.
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    # Requests already targeting the .php files will be forwarded to the PHP interpreter.
    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;

        # The official PHP image exposes port 9000 internally, so port 9000 is what will be exposed by the container.
        # Any requests to the php service (container) are sent directly from the server (nginx) service, not from our local machine. 
        # So a ports mapping "3000:9000" (3000 is the local host port) in the docker-compose file
        # wouldn't do anything to facilitate any direct communication from the server container to the php container. 
        # "fastcgi_pass php:3000;" means all requests which come from the server service are sent directly to the php service on port 3000. 
        # That's, the server service sends requests for the php service to port 3000, but the php service expects requests on port 9000 (defined in its official image).
        # So change "fastcgi_pass php:3000;" to "fastcgi_pass php:9000;", the server service will send requests directly to the php service on port 9000,
        # which fixes their communication problem - since the php container expects input to come in on port 9000.
        fastcgi_pass php:9000;

        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
    }
}